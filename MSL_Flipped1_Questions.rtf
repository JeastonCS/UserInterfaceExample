{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. This new implementation is more efficient in how it is faster when the user is interacting within the app because all of the images are preloaded, though it does take a little more time to load everything on startup (more specifically, when the first instance of imageModel is called).\
2. Because the application will need to load in the entire database of images when the first instance of the images dictionary is accessed, the app is less scalable with this implementation. Assuming the user would not need to access all of the images when they are using the app, loading them all into a dictionary would be a waste of time and space.\
3. Yes. Hardcoding 1000 images into the _images NSDictionary would be extremely inconvenient. I would want to be able to read the images in directly from the image.assets file.}